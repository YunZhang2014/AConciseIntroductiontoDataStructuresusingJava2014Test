import org.jetbrains.annotations.Contract;import org.jetbrains.annotations.NotNull;import java.util.Random;public class ArrayFunctions {   // Listing 1.3   @Contract(pure = true)   public static int linearSearch(int @NotNull [] data, int target) {      for (int i = 0; i < data.length; i++) {         if (target == data[i]) return i;      }      return -1;   }      // Listing 2.1   public static void insertionSort(int[] data) {      for (int i = 1; i < data.length; i++) {         int key = data[i];         int j = i - 1;         while (j >= 0 && key < data[j]) {            data[j + 1] = data[j];            j--;         }         data[j + 1] = key;      }   }      // Listing 2.2   public static void randomFill(int[] data, int max) {      Random gen = new Random();      for (int i = 0; i < data.length; i++) {         data[i] = gen.nextInt(max);      }   }      // Listing 2.3   public static int binarySearch(int[] data, int target) {      int left = 0;      int right = data.length - 1;      while (left <= right) {         int mid = (left + right) / 2;         if (target == data[mid]) {            return mid;         } else if (target < data[mid]) {            right = mid - 1;         } else {            left = mid + 1;         }      }      return -1;   }      public static void main(String[] args) {      int[] data = {3, 14, 7, 22, 45, 12, 19, 42, 6};      System.out.println("Search for 7: " +            linearSearch(data, 7));      System.out.println("Search for 100: " +            linearSearch(data, 100));   }}