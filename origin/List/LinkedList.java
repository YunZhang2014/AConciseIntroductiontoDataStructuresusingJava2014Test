//// For LinkedList class, Listing 6.2////import java.util.NoSuchElementException;////public E removeAt(int index) {//   if (index < 0 || index >= size)//         throw new IndexOutOfBoundsException();//   Node<E> p = getNode(index);//   Node<E> prev = p.prev;//   Node<E> next = p.next;//   E result = p.data;//   prev.next = next;//   if (next != null) next.prev = prev;//   size--;//   return result;//}////private Node<E> getNode(int index) {//   // assumes -1 <= index < size.  -1 is dummy.//   Node<E> p = head;//   for (int i = -1; i < index; i++) {//      p = p.next;//   }//   return p;//}////// For LinkedList class, Listing 6.3////import java.util.Iterator;////public Iterator<E> iterator() {//   return new LinkedListIterator();//}////private class LinkedListIterator implements Iterator<E> {//   private Node<E> next = head.next;  // skip dummy////   public boolean hasNext() {//      return next != null;//   }////   public E next() {//      if (!hasNext()) throw new NoSuchElementException();//      E result = next.data;//      next = next.next;//      return result;//   }////   public void remove() {//      throw new UnsupportedOperationException();//   }//}